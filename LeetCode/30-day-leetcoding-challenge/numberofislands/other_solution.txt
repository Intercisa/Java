more faster, but still DFS: 

class Solution {


    public int numIslands(char[][] grid) {
        int count = 0;
        int row = grid.length;
        if (row > 0) {
            int column = grid[0].length;
            for (int i = 0; i < row; i++) {
                for (int j = 0; j < column; j++) {
                    if (grid[i][j] == '1') {
                        count = count + 1;
                        expand(row, column, i, j, grid);
                    }
                }
            }
        }

        return count;
    }
    
    
    
    
    
    public void expand(int row, int column, int x, int y, char[][] grid) {
        if (grid[x][y] != '1') return;
        
        grid[x][y] = 'X'; // visited
        
        if (x - 1 >= 0) 
            expand(row, column, x - 1, y, grid);
        
        if (x + 1 < row) 
            expand(row, column, x + 1, y, grid);
        
        if (y - 1 >= 0) 
            expand(row, column, x, y - 1, grid);
        
        if (y + 1 < column) 
            expand(row, column, x, y + 1, grid);
        
    }
    
    
    
    
}
    